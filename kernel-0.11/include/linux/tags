!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABRT_ERR	hdreg.h	47;"	d
BBD_ERR	hdreg.h	50;"	d
BLOCK_SIZE	fs.h	49;"	d
BLOCK_SIZE_BITS	fs.h	50;"	d
BUSY_STAT	hdreg.h	31;"	d
CHARS	tty.h	30;"	d
CLOCKS_PER_SEC	kernel.h	14;"	d
CURRENT_TIME	sched.h	144;"	d
DEC	tty.h	25;"	d
DIR_ENTRIES_PER_BLOCK	fs.h	56;"	d
DMA_READ	fdreg.h	68;"	d
DMA_WRITE	fdreg.h	69;"	d
DRQ_STAT	hdreg.h	27;"	d
ECC_ERR	hdreg.h	49;"	d
ECC_STAT	hdreg.h	26;"	d
EMPTY	tty.h	26;"	d
EOF_CHAR	tty.h	40;"	d
ERASE_CHAR	tty.h	38;"	d
ERR_STAT	hdreg.h	24;"	d
FD_DATA	fdreg.h	17;"	d
FD_DCR	fdreg.h	20;"	d
FD_DIR	fdreg.h	19;"	d
FD_DOR	fdreg.h	18;"	d
FD_READ	fdreg.h	62;"	d
FD_RECALIBRATE	fdreg.h	60;"	d
FD_SEEK	fdreg.h	61;"	d
FD_SENSEI	fdreg.h	64;"	d
FD_SPECIFY	fdreg.h	65;"	d
FD_STATUS	fdreg.h	16;"	d
FD_WRITE	fdreg.h	63;"	d
FIRST_LDT_ENTRY	sched.h	156;"	d
FIRST_TASK	sched.h	7;"	d
FIRST_TSS_ENTRY	sched.h	155;"	d
FULL	tty.h	29;"	d
GDT_CODE	head.h	12;"	d
GDT_DATA	head.h	13;"	d
GDT_NUL	head.h	11;"	d
GDT_TMP	head.h	14;"	d
GETCH	tty.h	31;"	d
HD_CMD	hdreg.h	21;"	d
HD_COMMAND	hdreg.h	19;"	d
HD_CURRENT	hdreg.h	16;"	d
HD_DATA	hdreg.h	10;"	d
HD_ERROR	hdreg.h	11;"	d
HD_HCYL	hdreg.h	15;"	d
HD_LCYL	hdreg.h	14;"	d
HD_NSECTOR	hdreg.h	12;"	d
HD_PRECOMP	hdreg.h	18;"	d
HD_SECTOR	hdreg.h	13;"	d
HD_STATUS	hdreg.h	17;"	d
HZ	sched.h	5;"	d
ID_ERR	hdreg.h	48;"	d
INC	tty.h	24;"	d
INC_PIPE	fs.h	63;"	d
INDEX_STAT	hdreg.h	25;"	d
INIT_C_CC	tty.h	63;"	d
INIT_TASK	sched.h	115;"	d
INODES_PER_BLOCK	fs.h	55;"	d
INTR_CHAR	tty.h	36;"	d
IS_SEEKABLE	fs.h	24;"	d
I_MAP_SLOTS	fs.h	39;"	d
KBD_US	config.h	16;"	d
KILL_CHAR	tty.h	39;"	d
LAST	tty.h	28;"	d
LAST_TASK	sched.h	8;"	d
LDT_CODE	head.h	17;"	d
LDT_DATA	head.h	18;"	d
LDT_NUL	head.h	16;"	d
LEFT	tty.h	27;"	d
MAJOR	fs.h	33;"	d
MARK_ERR	hdreg.h	45;"	d
MINOR	fs.h	34;"	d
NAME_LEN	fs.h	36;"	d
NR_BUFFERS	fs.h	48;"	d
NR_FILE	fs.h	45;"	d
NR_HASH	fs.h	47;"	d
NR_INODE	fs.h	44;"	d
NR_OPEN	fs.h	43;"	d
NR_SUPER	fs.h	46;"	d
NR_TASKS	sched.h	4;"	d
NULL	fs.h	52;"	d
NULL	sched.h	26;"	d
PAGE_ALIGN	sched.h	188;"	d
PAGE_SIZE	mm.h	4;"	d
PIPE_EMPTY	fs.h	61;"	d
PIPE_FULL	fs.h	62;"	d
PIPE_HEAD	fs.h	58;"	d
PIPE_SIZE	fs.h	60;"	d
PIPE_TAIL	fs.h	59;"	d
PUTCH	tty.h	33;"	d
QUIT_CHAR	tty.h	37;"	d
READ	fs.h	26;"	d
READA	fs.h	28;"	d
READY_STAT	hdreg.h	30;"	d
ROOT_INO	fs.h	37;"	d
SEEK_STAT	hdreg.h	28;"	d
ST0_DS	fdreg.h	30;"	d
ST0_ECE	fdreg.h	33;"	d
ST0_HA	fdreg.h	31;"	d
ST0_INTR	fdreg.h	35;"	d
ST0_NR	fdreg.h	32;"	d
ST0_SE	fdreg.h	34;"	d
ST1_CRC	fdreg.h	42;"	d
ST1_EOC	fdreg.h	43;"	d
ST1_MAM	fdreg.h	38;"	d
ST1_ND	fdreg.h	40;"	d
ST1_OR	fdreg.h	41;"	d
ST1_WP	fdreg.h	39;"	d
ST2_BC	fdreg.h	47;"	d
ST2_CM	fdreg.h	52;"	d
ST2_CRC	fdreg.h	51;"	d
ST2_MAM	fdreg.h	46;"	d
ST2_SEH	fdreg.h	49;"	d
ST2_SNS	fdreg.h	48;"	d
ST2_WC	fdreg.h	50;"	d
ST3_HA	fdreg.h	55;"	d
ST3_TZ	fdreg.h	56;"	d
ST3_WP	fdreg.h	57;"	d
START_CHAR	tty.h	41;"	d
STATUS_BUSY	fdreg.h	24;"	d
STATUS_BUSYMASK	fdreg.h	23;"	d
STATUS_DIR	fdreg.h	26;"	d
STATUS_DMA	fdreg.h	25;"	d
STATUS_READY	fdreg.h	27;"	d
STOP_CHAR	tty.h	42;"	d
SUPER_MAGIC	fs.h	41;"	d
SUSPEND_CHAR	tty.h	43;"	d
TASK_INTERRUPTIBLE	sched.h	20;"	d
TASK_RUNNING	sched.h	19;"	d
TASK_STOPPED	sched.h	23;"	d
TASK_UNINTERRUPTIBLE	sched.h	21;"	d
TASK_ZOMBIE	sched.h	22;"	d
TRK0_ERR	hdreg.h	46;"	d
TTY_BUF_SIZE	tty.h	14;"	d
WIN_DIAGNOSE	hdreg.h	41;"	d
WIN_FORMAT	hdreg.h	38;"	d
WIN_INIT	hdreg.h	39;"	d
WIN_READ	hdreg.h	35;"	d
WIN_RESTORE	hdreg.h	34;"	d
WIN_SEEK	hdreg.h	40;"	d
WIN_SPECIFY	hdreg.h	42;"	d
WIN_VERIFY	hdreg.h	37;"	d
WIN_WRITE	hdreg.h	36;"	d
WRERR_STAT	hdreg.h	29;"	d
WRITE	fs.h	27;"	d
WRITEA	fs.h	29;"	d
Z_MAP_SLOTS	fs.h	40;"	d
_CONFIG_H	config.h	2;"	d
_FDREG_H	fdreg.h	7;"	d
_FS_H	fs.h	7;"	d
_HDREG_H	hdreg.h	7;"	d
_HEAD_H	head.h	2;"	d
_LDT	sched.h	158;"	d
_MM_H	mm.h	2;"	d
_SCHED_H	sched.h	2;"	d
_SIZE_T	kernel.h	10;"	d
_TIME_H	kernel.h	2;"	d
_TIME_T	kernel.h	5;"	d
_TSS	sched.h	157;"	d
_TTY_H	tty.h	10;"	d
_get_base	sched.h	/^static inline unsigned long _get_base(char * addr)$/;"	f
_set_base	sched.h	190;"	d
_set_limit	sched.h	203;"	d
a	head.h	/^	unsigned long a,b;$/;"	m	struct:desc_struct
alarm	sched.h	/^	long alarm;$/;"	m	struct:task_struct
b	head.h	/^	unsigned long a,b;$/;"	m	struct:desc_struct
b_blocknr	fs.h	/^	unsigned long b_blocknr;	\/* block number *\/$/;"	m	struct:buffer_head
b_count	fs.h	/^	unsigned char b_count;		\/* users using this block *\/$/;"	m	struct:buffer_head
b_data	fs.h	/^	char * b_data;			\/* pointer to data block (1024 bytes) *\/$/;"	m	struct:buffer_head
b_dev	fs.h	/^	unsigned short b_dev;		\/* device (0 = free) *\/$/;"	m	struct:buffer_head
b_dirt	fs.h	/^	unsigned char b_dirt;		\/* 0-clean,1-dirty *\/$/;"	m	struct:buffer_head
b_lock	fs.h	/^	unsigned char b_lock;		\/* 0 - ok, 1 -locked *\/$/;"	m	struct:buffer_head
b_next	fs.h	/^	struct buffer_head * b_next;$/;"	m	struct:buffer_head	typeref:struct:buffer_head::buffer_head
b_next_free	fs.h	/^	struct buffer_head * b_next_free;$/;"	m	struct:buffer_head	typeref:struct:buffer_head::buffer_head
b_prev	fs.h	/^	struct buffer_head * b_prev;$/;"	m	struct:buffer_head	typeref:struct:buffer_head::buffer_head
b_prev_free	fs.h	/^	struct buffer_head * b_prev_free;$/;"	m	struct:buffer_head	typeref:struct:buffer_head::buffer_head
b_uptodate	fs.h	/^	unsigned char b_uptodate;$/;"	m	struct:buffer_head
b_wait	fs.h	/^	struct task_struct * b_wait;$/;"	m	struct:buffer_head	typeref:struct:buffer_head::task_struct
back_link	sched.h	/^	long	back_link;	\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
blocked	sched.h	/^	long blocked;	\/* bitmap of masked signals *\/$/;"	m	struct:task_struct
boot_ind	hdreg.h	/^	unsigned char boot_ind;		\/* 0x80 - active (unused) *\/$/;"	m	struct:partition
brk	sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	struct:task_struct
buf	tty.h	/^	char buf[TTY_BUF_SIZE];$/;"	m	struct:tty_queue
buffer_block	fs.h	/^typedef char buffer_block[BLOCK_SIZE];$/;"	t
buffer_head	fs.h	/^struct buffer_head {$/;"	s
clock_t	kernel.h	/^typedef long clock_t;$/;"	t
close_on_exec	sched.h	/^	unsigned long close_on_exec;$/;"	m	struct:task_struct
counter	sched.h	/^	long counter;$/;"	m	struct:task_struct
cr3	sched.h	/^	long	cr3;$/;"	m	struct:tss_struct
cs	sched.h	/^	long	cs;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
cstime	sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	struct:task_struct
cutime	sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	struct:task_struct
cwd	sched.h	/^	long	cwd;$/;"	m	struct:i387_struct
cyl	hdreg.h	/^	unsigned char cyl;		\/* ? *\/$/;"	m	struct:partition
d_inode	fs.h	/^struct d_inode {$/;"	s
d_super_block	fs.h	/^struct d_super_block {$/;"	s
data	tty.h	/^	unsigned long data;$/;"	m	struct:tty_queue
desc_struct	head.h	/^typedef struct desc_struct {$/;"	s
desc_table	head.h	/^} desc_table[256];$/;"	t	typeref:struct:desc_struct
dir_entry	fs.h	/^struct dir_entry {$/;"	s
ds	sched.h	/^	long	ds;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
eax	sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	struct:tss_struct
ebp	sched.h	/^	long	ebp;$/;"	m	struct:tss_struct
ebx	sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	struct:tss_struct
ecx	sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	struct:tss_struct
edi	sched.h	/^	long	edi;$/;"	m	struct:tss_struct
edx	sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	struct:tss_struct
eflags	sched.h	/^	long	eflags;$/;"	m	struct:tss_struct
egid	sched.h	/^	unsigned short gid,egid,sgid;$/;"	m	struct:task_struct
eip	sched.h	/^	long	eip;$/;"	m	struct:tss_struct
end_code	sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	struct:task_struct
end_cyl	hdreg.h	/^	unsigned char end_cyl;		\/* ? *\/$/;"	m	struct:partition
end_data	sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	struct:task_struct
end_head	hdreg.h	/^	unsigned char end_head;		\/* ? *\/$/;"	m	struct:partition
end_sector	hdreg.h	/^	unsigned char end_sector;	\/* ? *\/$/;"	m	struct:partition
es	sched.h	/^	long	es;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
esi	sched.h	/^	long	esi;$/;"	m	struct:tss_struct
esp	sched.h	/^	long	esp;$/;"	m	struct:tss_struct
esp0	sched.h	/^	long	esp0;$/;"	m	struct:tss_struct
esp1	sched.h	/^	long	esp1;$/;"	m	struct:tss_struct
esp2	sched.h	/^	long	esp2;$/;"	m	struct:tss_struct
euid	sched.h	/^	unsigned short uid,euid,suid;$/;"	m	struct:task_struct
executable	sched.h	/^	struct m_inode * executable;$/;"	m	struct:task_struct	typeref:struct:task_struct::m_inode
exit_code	sched.h	/^	int exit_code;$/;"	m	struct:task_struct
f_count	fs.h	/^	unsigned short f_count;$/;"	m	struct:file
f_flags	fs.h	/^	unsigned short f_flags;$/;"	m	struct:file
f_inode	fs.h	/^	struct m_inode * f_inode;$/;"	m	struct:file	typeref:struct:file::m_inode
f_mode	fs.h	/^	unsigned short f_mode;$/;"	m	struct:file
f_pos	fs.h	/^	off_t f_pos;$/;"	m	struct:file
father	sched.h	/^	long pid,father,pgrp,session,leader;$/;"	m	struct:task_struct
fcs	sched.h	/^	long	fcs;$/;"	m	struct:i387_struct
file	fs.h	/^struct file {$/;"	s
filp	sched.h	/^	struct file * filp[NR_OPEN];$/;"	m	struct:task_struct	typeref:struct:task_struct::file
fip	sched.h	/^	long	fip;$/;"	m	struct:i387_struct
fn_ptr	sched.h	/^typedef int (*fn_ptr)();$/;"	t
foo	sched.h	/^	long	foo;$/;"	m	struct:i387_struct
fos	sched.h	/^	long	fos;$/;"	m	struct:i387_struct
fs	sched.h	/^	long	fs;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
get_base	sched.h	249;"	d
get_limit	sched.h	251;"	d
gid	sched.h	/^	unsigned short gid,egid,sgid;$/;"	m	struct:task_struct
gs	sched.h	/^	long	gs;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
head	hdreg.h	/^	unsigned char head;		\/* ? *\/$/;"	m	struct:partition
head	tty.h	/^	unsigned long head;$/;"	m	struct:tty_queue
i387	sched.h	/^	struct i387_struct i387;$/;"	m	struct:tss_struct	typeref:struct:tss_struct::i387_struct
i387_struct	sched.h	/^struct i387_struct {$/;"	s
i_atime	fs.h	/^	unsigned long i_atime;$/;"	m	struct:m_inode
i_count	fs.h	/^	unsigned short i_count;$/;"	m	struct:m_inode
i_ctime	fs.h	/^	unsigned long i_ctime;$/;"	m	struct:m_inode
i_dev	fs.h	/^	unsigned short i_dev;$/;"	m	struct:m_inode
i_dirt	fs.h	/^	unsigned char i_dirt;$/;"	m	struct:m_inode
i_gid	fs.h	/^	unsigned char i_gid;$/;"	m	struct:d_inode
i_gid	fs.h	/^	unsigned char i_gid;$/;"	m	struct:m_inode
i_lock	fs.h	/^	unsigned char i_lock;$/;"	m	struct:m_inode
i_mode	fs.h	/^	unsigned short i_mode;$/;"	m	struct:d_inode
i_mode	fs.h	/^	unsigned short i_mode;$/;"	m	struct:m_inode
i_mount	fs.h	/^	unsigned char i_mount;$/;"	m	struct:m_inode
i_mtime	fs.h	/^	unsigned long i_mtime;$/;"	m	struct:m_inode
i_nlinks	fs.h	/^	unsigned char i_nlinks;$/;"	m	struct:d_inode
i_nlinks	fs.h	/^	unsigned char i_nlinks;$/;"	m	struct:m_inode
i_num	fs.h	/^	unsigned short i_num;$/;"	m	struct:m_inode
i_pipe	fs.h	/^	unsigned char i_pipe;$/;"	m	struct:m_inode
i_seek	fs.h	/^	unsigned char i_seek;$/;"	m	struct:m_inode
i_size	fs.h	/^	unsigned long i_size;$/;"	m	struct:d_inode
i_size	fs.h	/^	unsigned long i_size;$/;"	m	struct:m_inode
i_time	fs.h	/^	unsigned long i_time;$/;"	m	struct:d_inode
i_uid	fs.h	/^	unsigned short i_uid;$/;"	m	struct:d_inode
i_uid	fs.h	/^	unsigned short i_uid;$/;"	m	struct:m_inode
i_update	fs.h	/^	unsigned char i_update;$/;"	m	struct:m_inode
i_wait	fs.h	/^	struct task_struct * i_wait;$/;"	m	struct:m_inode	typeref:struct:m_inode::task_struct
i_zone	fs.h	/^	unsigned short i_zone[9];$/;"	m	struct:d_inode
i_zone	fs.h	/^	unsigned short i_zone[9];$/;"	m	struct:m_inode
inode	fs.h	/^	unsigned short inode;$/;"	m	struct:dir_entry
ldt	sched.h	/^	long	ldt;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
ldt	sched.h	/^	struct desc_struct ldt[3];$/;"	m	struct:task_struct	typeref:struct:task_struct::desc_struct
leader	sched.h	/^	long pid,father,pgrp,session,leader;$/;"	m	struct:task_struct
lldt	sched.h	160;"	d
ltr	sched.h	159;"	d
m_inode	fs.h	/^struct m_inode {$/;"	s
name	fs.h	/^	char name[NAME_LEN];$/;"	m	struct:dir_entry
nr_sects	hdreg.h	/^	unsigned int nr_sects;		\/* nr of sectors in partition *\/$/;"	m	struct:partition
partition	hdreg.h	/^struct partition {$/;"	s
pgrp	sched.h	/^	long pid,father,pgrp,session,leader;$/;"	m	struct:task_struct
pgrp	tty.h	/^	int pgrp;$/;"	m	struct:tty_struct
pid	sched.h	/^	long pid,father,pgrp,session,leader;$/;"	m	struct:task_struct
priority	sched.h	/^	long priority;$/;"	m	struct:task_struct
proc_list	tty.h	/^	struct task_struct * proc_list;$/;"	m	struct:tty_queue	typeref:struct:tty_queue::task_struct
pwd	sched.h	/^	struct m_inode * pwd;$/;"	m	struct:task_struct	typeref:struct:task_struct::m_inode
read_q	tty.h	/^	struct tty_queue read_q;$/;"	m	struct:tty_struct	typeref:struct:tty_struct::tty_queue
root	sched.h	/^	struct m_inode * root;$/;"	m	struct:task_struct	typeref:struct:task_struct::m_inode
s_dev	fs.h	/^	unsigned short s_dev;$/;"	m	struct:super_block
s_dirt	fs.h	/^	unsigned char s_dirt;$/;"	m	struct:super_block
s_firstdatazone	fs.h	/^	unsigned short s_firstdatazone;$/;"	m	struct:d_super_block
s_firstdatazone	fs.h	/^	unsigned short s_firstdatazone;$/;"	m	struct:super_block
s_imap	fs.h	/^	struct buffer_head * s_imap[8];$/;"	m	struct:super_block	typeref:struct:super_block::buffer_head
s_imap_blocks	fs.h	/^	unsigned short s_imap_blocks;$/;"	m	struct:d_super_block
s_imap_blocks	fs.h	/^	unsigned short s_imap_blocks;$/;"	m	struct:super_block
s_imount	fs.h	/^	struct m_inode * s_imount;$/;"	m	struct:super_block	typeref:struct:super_block::m_inode
s_isup	fs.h	/^	struct m_inode * s_isup;$/;"	m	struct:super_block	typeref:struct:super_block::m_inode
s_lock	fs.h	/^	unsigned char s_lock;$/;"	m	struct:super_block
s_log_zone_size	fs.h	/^	unsigned short s_log_zone_size;$/;"	m	struct:d_super_block
s_log_zone_size	fs.h	/^	unsigned short s_log_zone_size;$/;"	m	struct:super_block
s_magic	fs.h	/^	unsigned short s_magic;$/;"	m	struct:d_super_block
s_magic	fs.h	/^	unsigned short s_magic;$/;"	m	struct:super_block
s_max_size	fs.h	/^	unsigned long s_max_size;$/;"	m	struct:d_super_block
s_max_size	fs.h	/^	unsigned long s_max_size;$/;"	m	struct:super_block
s_ninodes	fs.h	/^	unsigned short s_ninodes;$/;"	m	struct:d_super_block
s_ninodes	fs.h	/^	unsigned short s_ninodes;$/;"	m	struct:super_block
s_nzones	fs.h	/^	unsigned short s_nzones;$/;"	m	struct:d_super_block
s_nzones	fs.h	/^	unsigned short s_nzones;$/;"	m	struct:super_block
s_rd_only	fs.h	/^	unsigned char s_rd_only;$/;"	m	struct:super_block
s_time	fs.h	/^	unsigned long s_time;$/;"	m	struct:super_block
s_wait	fs.h	/^	struct task_struct * s_wait;$/;"	m	struct:super_block	typeref:struct:super_block::task_struct
s_zmap	fs.h	/^	struct buffer_head * s_zmap[8];$/;"	m	struct:super_block	typeref:struct:super_block::buffer_head
s_zmap_blocks	fs.h	/^	unsigned short s_zmap_blocks;$/;"	m	struct:d_super_block
s_zmap_blocks	fs.h	/^	unsigned short s_zmap_blocks;$/;"	m	struct:super_block
secondary	tty.h	/^	struct tty_queue secondary;$/;"	m	struct:tty_struct	typeref:struct:tty_struct::tty_queue
sector	hdreg.h	/^	unsigned char sector;		\/* ? *\/$/;"	m	struct:partition
session	sched.h	/^	long pid,father,pgrp,session,leader;$/;"	m	struct:task_struct
set_base	sched.h	217;"	d
set_limit	sched.h	218;"	d
sgid	sched.h	/^	unsigned short gid,egid,sgid;$/;"	m	struct:task_struct
sigaction	sched.h	/^	struct sigaction sigaction[32];$/;"	m	struct:task_struct	typeref:struct:task_struct::sigaction
signal	sched.h	/^	long signal;$/;"	m	struct:task_struct
size_t	kernel.h	/^typedef unsigned int size_t;$/;"	t
ss	sched.h	/^	long	ss;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
ss0	sched.h	/^	long	ss0;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
ss1	sched.h	/^	long	ss1;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
ss2	sched.h	/^	long	ss2;		\/* 16 high bits zero *\/$/;"	m	struct:tss_struct
st_space	sched.h	/^	long	st_space[20];	\/* 8*10 bytes for each FP-reg = 80 bytes *\/$/;"	m	struct:i387_struct
start_code	sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	struct:task_struct
start_sect	hdreg.h	/^	unsigned int start_sect;	\/* starting sector counting from 0 *\/$/;"	m	struct:partition
start_stack	sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	struct:task_struct
start_time	sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	struct:task_struct
state	sched.h	/^	long state;	\/* -1 unrunnable, 0 runnable, >0 stopped *\/$/;"	m	struct:task_struct
stime	sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	struct:task_struct
stopped	tty.h	/^	int stopped;$/;"	m	struct:tty_struct
str	sched.h	161;"	d
suid	sched.h	/^	unsigned short uid,euid,suid;$/;"	m	struct:task_struct
super_block	fs.h	/^struct super_block {$/;"	s
swd	sched.h	/^	long	swd;$/;"	m	struct:i387_struct
switch_to	sched.h	173;"	d
sys_call_table	sys.h	/^fn_ptr sys_call_table[] = { sys_setup, sys_exit, sys_fork, sys_read,$/;"	v
sys_ind	hdreg.h	/^	unsigned char sys_ind;		\/* ? *\/$/;"	m	struct:partition
tail	tty.h	/^	unsigned long tail;$/;"	m	struct:tty_queue
task_struct	sched.h	/^struct task_struct {$/;"	s
termios	tty.h	/^	struct termios termios;$/;"	m	struct:tty_struct	typeref:struct:tty_struct::termios
time_t	kernel.h	/^typedef long time_t;$/;"	t
tm	kernel.h	/^struct tm {$/;"	s
tm_hour	kernel.h	/^	int tm_hour;$/;"	m	struct:tm
tm_isdst	kernel.h	/^	int tm_isdst;$/;"	m	struct:tm
tm_mday	kernel.h	/^	int tm_mday;$/;"	m	struct:tm
tm_min	kernel.h	/^	int tm_min;$/;"	m	struct:tm
tm_mon	kernel.h	/^	int tm_mon;$/;"	m	struct:tm
tm_sec	kernel.h	/^	int tm_sec;$/;"	m	struct:tm
tm_wday	kernel.h	/^	int tm_wday;$/;"	m	struct:tm
tm_yday	kernel.h	/^	int tm_yday;$/;"	m	struct:tm
tm_year	kernel.h	/^	int tm_year;$/;"	m	struct:tm
trace_bitmap	sched.h	/^	long	trace_bitmap;	\/* bits: trace 0, bitmap 16-31 *\/$/;"	m	struct:tss_struct
tss	sched.h	/^	struct tss_struct tss;$/;"	m	struct:task_struct	typeref:struct:task_struct::tss_struct
tss_struct	sched.h	/^struct tss_struct {$/;"	s
tty	sched.h	/^	int tty;		\/* -1 if no tty, so it must be signed *\/$/;"	m	struct:task_struct
tty_queue	tty.h	/^struct tty_queue {$/;"	s
tty_struct	tty.h	/^struct tty_struct {$/;"	s
twd	sched.h	/^	long	twd;$/;"	m	struct:i387_struct
uid	sched.h	/^	unsigned short uid,euid,suid;$/;"	m	struct:task_struct
umask	sched.h	/^	unsigned short umask;$/;"	m	struct:task_struct
used_math	sched.h	/^	unsigned short used_math;$/;"	m	struct:task_struct
utime	sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	struct:task_struct
write	tty.h	/^	void (*write)(struct tty_struct * tty);$/;"	m	struct:tty_struct
write_q	tty.h	/^	struct tty_queue write_q;$/;"	m	struct:tty_struct	typeref:struct:tty_struct::tty_queue
